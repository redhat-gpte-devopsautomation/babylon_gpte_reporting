---
gpte_reporting_catalog_item: >-
  {{ vars.anarchy_governor.metadata.name | default('unknown') }}
  
# Flag to indicate if errors should be ignored
gpte_reporting_ignore_errors: >-
  {{ vars.anarchy_subject.vars.gpte_reporting_ignore_errors
   | default(vars.anarchy_governor.vars.gpte_reporting_ignore_errors)
   | default(false)
  }}

gpte_reporting_subject_annotations: >-
  {{ vars.anarchy_subject.metadata.annotations | default({}) }}

# Get user name from poolboy annotation and fallback to namespace name
gpte_reporting_user_name: >-
  {{ gpte_reporting_subject_annotations.get('poolboy.gpte.redhat.com/resource-requester-user')
   | default(gpte_reporting_subject_annotations.get('poolboy.gpte.redhat.com/resource-claim-namespace') | regex_replace('^user-', ''), true)
   | default('')
  }}

# Get email from poolboy annotation or from gpte_reporting_user_name
gpte_reporting_user_email: >-
  {{ gpte_reporting_subject_annotations.get('poolboy.gpte.redhat.com/resource-requester-email')
   | default(gpte_reporting_user_name| regex_replace('(.*)-', '\1@'), true)
  }}

# Combine job vars from governor and subject as babylon_anarchy_governor does, with
# governor vars overriding subject vars
gpte_reporting_job_vars: >-
  {{ vars.anarchy_subject.vars.job_vars
   | combine(vars.anarchy_governor.vars.job_vars)
  }}

gpte_reporting_cloud_provider: "{{ gpte_reporting_job_vars.cloud_provider }}"
gpte_reporting_env_type: "{{ gpte_reporting_job_vars.env_type }}"
gpte_reporting_guid: "{{ gpte_reporting_job_vars.guid }}"
gpte_reporting_uuid: "{{ gpte_reporting_job_vars.uuid }}"

gpte_reporting_cloud_region: >-
  {{ agnostics_placement_cloud
   | default(gpte_reporting_job_vars.aws_region)
   | default(None)
  }}
