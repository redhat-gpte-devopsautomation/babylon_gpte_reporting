---
- name: Get ResourceClaim Data
  include_tasks: get-resource-claim-data.yaml
  when:
  - poolboy_resource_claim_name != ''
  - poolboy_resource_claim_namespace != ''

- name: Update Environments
  # Do not prevent provision when database is unavailable
  ignore_errors: "{{ gpte_reporting_ignore_errors | bool }}"
  mysql_query:
    login_db: "{{ gpte_db.mysql_db }}"
    login_host: "{{ gpte_db.mysql_host }}"
    login_port: "{{ gpte_db.mysql_port }}"
    login_password: "{{ gpte_db.mysql_password }}"
    login_user: "{{ gpte_db.mysql_user }}"

    positional_args:
    - "{{ request_uuid }}"
    - "{{ gpte_reporting_uuid }}"
    - "{{ gpte_reporting_guid }}"
    - "{{ vars.anarchy_subject.spec.governor }}"
    - "{{ gpte_reporting_env_type }}"
    - "{{ gpte_reporting_cloud_provider }}"
    - "{{ gpte_reporting_cloud_region }}"
    - "{{ request_guid }}"
    - "{{ request_uuid }}"
    - "{{ gpte_reporting_user_name }}"
    - "{{ gpte_reporting_user_email }}"
    - "{{ gpte_reporting_job_vars | to_json }}"
    - "{{ gpte_reporting_cloud_region }}"
    - "{{ request_guid }}"
    - "{{ request_uuid }}"
    - "{{ request_uuid }}"
    - "{{ gpte_reporting_user_name }}"
    - "{{ gpte_reporting_user_email }}"
    - "{{ gpte_reporting_job_vars | to_json }}"
    query:
    - >-
      INSERT INTO Environments (
        `UUID`,
        `GUID`,
        `AnarchyGovernor`,
        `EnvironmentType`,
        `CloudProvider`,
        `CloudRegion`,
        `RequestGUID`,
        `RequestUUID`,
        `RequestDateTime` = IF(%s = '', NULL, UTC_TIMESTAMP()),
        `UserName`,
        `UserEmail`,
        `ProvisionVars`,
        `State`
      ) VALUES (
        %s, %s, %s, %s, %s, %s, %s, %s, %s,
        'provisioning'
      ) ON DUPLICATE KEY UPDATE
      `CloudRegion` = %s,
      `RequestGUID` = %s,
      `RequestUUID` = IF(`RequestUUID` = '', %s, `RequestUUID`),
      `RequestDateTime` = IFNULL(`RequestDateTime`, IF(%s = '', NULL, UTC_TIMESTAMP())),
      `UserName` = %s,
      `UserEmail` = %s,
      `ProvisionVars` = %s,
      `State` = 'provisioning'
